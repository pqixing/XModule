if (!hasProperty("localBuild")) return
if (localBuild) {
    apply plugin: 'maven'
// 上传到本地代码库
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: localMavenUri) {
                    authentication(userName: "admin", password: "admin123")
                }
                pom.groupId = publishedGroupId // 组名
                pom.artifactId = mArtifactId// 插件名
                pom.version = mLocalVersion // 版本号
            }
        }
    }
    return
}
// backup of [https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle]
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'
apply plugin: 'maven-publish'

version = mVersion
if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier 'sources'
        from android.sourceSets.main.java.srcDirs
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier 'sources'
        from sourceSets.main.allSource
    }
}

artifacts {
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
publishing {
    publications {
        qixing(MavenPublication) {
            if (project.hasProperty("android")) {
                artifact("$buildDir/outputs/aar/${project.name}-release.aar")
            } else {
                from components.java
            }
            groupId publishedGroupId
            artifactId mArtifactId
            version mVersion

        }
    }
}

group publishedGroupId
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    publications = ['qixing']
    pkg {
        repo = bintrayRepo
        name = developerId
        desc = mArtifactId
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = "$mArtifactId for modularization"
            name = mVersion
        }
    }
}
