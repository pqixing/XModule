apply plugin: 'kotlin'
apply plugin: 'java'
//apply plugin: 'com.github.dcendents.android-maven'
dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compileOnly localGroovy()
    testImplementation 'junit:junit:4.12'
}

ext.mainDir = new File(projectDir, "src/main")
ext.resourceDir = new File(mainDir, "resources/com/pqixing")
ext.javaFileDir = new File(mainDir, "java/com/pqixing")
task("copyClass") {
    group = "build"
    doFirst {
        def fileName = "Config.java"
        writeFile("//" + new File(javaFileDir, fileName).text, new File(resourceDir, "setting/$fileName"))

        StringBuilder sb = new StringBuilder("package com.pqixing\nobject Templet {")
        def dir = resourceDir
        dir.eachFile { f ->
            if (f.isFile()) sb.append("\nval ${f.name.replace(".", "_")} = \"$f.name\" ")
            else {
                sb.append("\nval $f.name = listOf( ")
                f.eachFile { f1 ->
                    if (f1.isDirectory()) f1.eachFile { f2 ->
                        sb.append("\"$f1.name/$f2.name\",")
                    } else sb.append("\"$f1.name\",")
                }
                sb.deleteCharAt(sb.length() - 1)
                sb.append(")")
            }
        }
        sb.append("\n}")
        writeFile(sb.toString(), new File(javaFileDir, "Templet.kt"))
    }
}

def writeFile(String txt, File out) {
    if (!out.exists()) {
        out.parentFile.mkdir()
        out.createNewFile()
    }
    def writer = out.newWriter()
    writer.write(txt)
    writer.flush()
    writer.close()
}

ext.mVersion = "1.2.1"
ext.mLocalVersion = "1.0.1"
ext.mArtifactId = "tools"
apply from: '../script/bintray.gradle'